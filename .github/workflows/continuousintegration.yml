name: Python Lint & Docker CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    name: Run Pylint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pylint

      - name: Run Pylint
        run: |
          pylint **/*.py || true  # evita que quebre o build só por warnings

  deploy:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: lint

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/calculadora:latest .

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/calculadora:latest

  notify:
    name: Notify Discord
    runs-on: ubuntu-latest
    if: failure()  # Este job só será executado se houver falha em outro job

    steps:
      - name: Send Discord notification
        run: |
          curl -X POST -H "Content-Type: application/json" \
          -d '{"content": "O workflow falhou! :x: Erro no build!"}' \
          ${{ secrets.DISCORD_WEBHOOK_URL }}
